{"entries":[{"timestamp":1730502371687,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n"],[0,"</xm"]],"start1":12,"start2":12,"length1":70,"length2":113}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"/**\n * COMMUNICATION       MBIT <> RPI\n * -------------       -----------\n * GATE1 CLOSED        P1   <  6\n * GATE2 CLOSED        P2   <  5\n * DATA VALID          P0   >  7\n * DATA RECEIVED       P3   <  8\n * MEDIA SELECT A      P20  >  18\n * MEDIA SELECT B      P19  >  23\n * LED SELECT A        P13  >  24\n * LED SELECT B        P12  >  25\n * LED COLOR RED       P14  >  11\n * LED COLOR GREEN     P15  >  9\n * LED COLOR BLUE      P16  >  10\n */\n\nlet LOW = 0\nlet PIN_GATE1 = DigitalPin.P1\nlet PIN_GATE2 = DigitalPin.P2\nlet PIN_DVALID = DigitalPin.P0\nlet PIN_DRECEIVED = DigitalPin.P3\nlet PIN_MEDSELA = DigitalPin.P20\nlet PIN_MEDSELB = DigitalPin.P19\nlet PIN_LEDSELA = DigitalPin.P13\nlet PIN_LEDSELB = DigitalPin.P12\nlet PIN_LEDRED = DigitalPin.P14\nlet PIN_LEDGREEN = DigitalPin.P15\nlet PIN_LEDBLUE = DigitalPin.P16\nlet HIGH = 1\n\npins.setPull(PIN_DRECEIVED, PinPullMode.PullUp)\n\n//% color=\"#00CC00\" icon=\"\\u2B88\"\n//% block=\"Pinball\"\n//% block.loc.nl=\"Flipperkast\"\nnamespace CBurgPinball {\n\n    export enum Gate {\n        //% block=\"gate 1\"\n        //% block.loc.nl=\"poortje 1\"\n        Gate1,\n        //% block=\"gate 2\"\n        //% block.loc.nl=\"poortje 2\"\n        Gate2\n    }\n\n    export enum LedId {\n        //% block=\"led 1\"\n        //% block.loc.nl=\"led 1\"\n        Led1,\n        //% block=\"led 2\"\n        //% block.loc.nl=\"led 2\"\n        Led2,\n        //% block=\"led 3\"\n        //% block.loc.nl=\"led 3\"\n        Led3\n    }\n\n    export enum ColorId {\n        //% block=\"dark\"\n        //% block.loc.nl=\"donker\"\n        Off,\n        //% block=\"red\"\n        //% block.loc.nl=\"rood\"\n        Red,\n        //% block=\"yellow\"\n        //% block.loc.nl=\"geel\"\n        Yellow,\n        //% block=\"green\"\n        //% block.loc.nl=\"groen\"\n        Green,\n        //% block=\"light blue\"\n        //% block.loc.nl=\"lichtblauw\"\n        Cyan,\n        //% block=\"blue\"\n        //% block.loc.nl=\"blauw\"\n        Blue,\n        //% block=\"purple\"\n        //% block.loc.nl=\"paars\"\n        Magenta,\n        //% block=\"white\"\n        //% block.loc.nl=\"wit\"\n        White\n    }\n\n    export enum MediaId {\n        //% block=\"video 1\"\n        //% block.loc.nl=\"video 1\"\n        Video1,\n        //% block=\"video 2\"\n        //% block.loc.nl=\"video 2\"\n        Video2\n    }\n\n    //% block=\"thru gate 2\"\n    //% block.loc.nl=\"door poortje 2\"\n    export function thruGate2(): boolean {\n        return (pins.digitalReadPin(PIN_GATE2) == HIGH)\n    }\n\n    //% block=\"thru gate 1\"\n    //% block.loc.nl=\"door poortje 1\"\n    export function thruGate1(): boolean {\n        return (pins.digitalReadPin(PIN_GATE1) == HIGH)\n    }\n\n    //% block=\"wait %time sec\"\n    //% block.loc.nl=\"wacht %time sec\"\n    export function wait(time: number) {\n        basic.pause(time * 1000);\n    }\n\n    //% block=\"color %ledid %state\"\n    //% block.loc.nl=\"kleur %ledid %state\"\n    export function switchled(ledid: LedId, colorid: ColorId) {\n        // do not change media\n        pins.digitalWritePin(PIN_MEDSELA, LOW)\n        pins.digitalWritePin(PIN_MEDSELB, LOW)\n        // choose the led\n        if (ledid == LedId.Led1) {\n            pins.digitalWritePin(PIN_LEDSELA, LOW);\n            pins.digitalWritePin(PIN_LEDSELB, HIGH);\n        }\n        if (ledid == LedId.Led2) {\n            pins.digitalWritePin(PIN_LEDSELA, HIGH);\n            pins.digitalWritePin(PIN_LEDSELB, LOW);\n        }\n        if (ledid == LedId.Led3) {\n            pins.digitalWritePin(PIN_LEDSELA, HIGH);\n            pins.digitalWritePin(PIN_LEDSELB, HIGH);\n        }\n        // set the color\n        if (colorid == ColorId.Off) {\n            pins.digitalWritePin(PIN_LEDRED, LOW);\n            pins.digitalWritePin(PIN_LEDGREEN, LOW);\n            pins.digitalWritePin(PIN_LEDBLUE, LOW);\n        }\n        if (colorid == ColorId.Red) {\n            pins.digitalWritePin(PIN_LEDRED, HIGH);\n            pins.digitalWritePin(PIN_LEDGREEN, LOW);\n            pins.digitalWritePin(PIN_LEDBLUE, LOW);\n        }\n        if (colorid == ColorId.Yellow) {\n            pins.digitalWritePin(PIN_LEDRED, HIGH);\n            pins.digitalWritePin(PIN_LEDGREEN, HIGH);\n            pins.digitalWritePin(PIN_LEDBLUE, LOW);\n        }\n        if (colorid == ColorId.Green) {\n            pins.digitalWritePin(PIN_LEDRED, LOW);\n            pins.digitalWritePin(PIN_LEDGREEN, HIGH);\n            pins.digitalWritePin(PIN_LEDBLUE, LOW);\n        }\n        if (colorid == ColorId.Cyan) {\n            pins.digitalWritePin(PIN_LEDRED, LOW);\n            pins.digitalWritePin(PIN_LEDGREEN, HIGH);\n            pins.digitalWritePin(PIN_LEDBLUE, HIGH);\n        }\n        if (colorid == ColorId.Blue) {\n            pins.digitalWritePin(PIN_LEDRED, LOW);\n            pins.digitalWritePin(PIN_LEDGREEN, LOW);\n            pins.digitalWritePin(PIN_LEDBLUE, HIGH);\n        }\n        if (colorid == ColorId.Magenta) {\n            pins.digitalWritePin(PIN_LEDRED, HIGH);\n            pins.digitalWritePin(PIN_LEDGREEN, LOW);\n            pins.digitalWritePin(PIN_LEDBLUE, HIGH);\n        }\n        if (colorid == ColorId.White) {\n            pins.digitalWritePin(PIN_LEDRED, HIGH);\n            pins.digitalWritePin(PIN_LEDGREEN, HIGH);\n            pins.digitalWritePin(PIN_LEDBLUE, HIGH);\n        }\n        // communicate to raspberry\n        pins.digitalWritePin(PIN_DVALID, HIGH);\n        while (!pins.digitalReadPin(PIN_DRECEIVED));\n        pins.digitalWritePin(PIN_DVALID, LOW);\n        basic.pause(10)\n    }\n\n    //% block=\"start %mediaid\"\n    //% block.loc.nl=\"start %mediaid\"\n    export function startVideo(mediaid: MediaId) {\n        // do not change leds\n        pins.digitalWritePin(PIN_LEDSELA, LOW)\n        pins.digitalWritePin(PIN_LEDSELB, LOW)\n        // choose the medium\n        if (mediaid == MediaId.Video1) {\n            pins.digitalWritePin(PIN_MEDSELA, LOW);\n            pins.digitalWritePin(PIN_MEDSELB, HIGH);\n        }\n        else\n            if (mediaid == MediaId.Video2) {\n                pins.digitalWritePin(PIN_MEDSELA, HIGH);\n                pins.digitalWritePin(PIN_MEDSELB, LOW);\n            }\n        // communicate to raspberry\n        pins.digitalWritePin(PIN_DVALID, HIGH);\n        while (!pins.digitalReadPin(PIN_DRECEIVED));\n        pins.digitalWritePin(PIN_DVALID, LOW);\n        basic.pause(10)\n    }\n\n    //% block=\"show background\"\n    //% block.loc.nl=\"toon achtergrond\"\n    export function showBackground() {\n        // do not change leds\n        pins.digitalWritePin(PIN_LEDSELA, LOW)\n        pins.digitalWritePin(PIN_LEDSELB, LOW)\n        // choose background medium\n        pins.digitalWritePin(PIN_MEDSELA, HIGH);\n        pins.digitalWritePin(PIN_MEDSELB, HIGH);\n        // communicate to raspberry\n        pins.digitalWritePin(PIN_DVALID, HIGH);\n        while (!pins.digitalReadPin(PIN_DRECEIVED));\n        pins.digitalWritePin(PIN_DVALID, LOW);\n        basic.pause(10)\n    }\n}"],[0,"\n"]],"start1":0,"start2":0,"length1":6794,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"   \""],[-1,"testFiles\": [\n        \"test.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":239,"start2":239,"length1":76,"length2":31}]},{"type":"added","filename":"test.ts","value":"// tests gaan hier; deze zal niet worden gecompileerd wanneer dit pakket wordt gebruikt als extensie.\n"}]}],"snapshots":[{"timestamp":1730502371686,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"pxt-flipperkast\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1730502534831}